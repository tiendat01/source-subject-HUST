RS: GLenum;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: GLenum;\n    readonly MAX_COLOR_ATTACHMENTS: GLenum;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_DRAW_BUFFERS: GLenum;\n    readonly MAX_ELEMENTS_INDICES: GLenum;\n    readonly MAX_ELEMENTS_VERTICES: GLenum;\n    readonly MAX_ELEMENT_INDEX: GLenum;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly MAX_SAMPLES: GLenum;\n    readonly MAX_SERVER_WAIT_TIMEOUT: GLenum;\n    readonly MAX_TEXTURE_LOD_BIAS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: GLenum;\n    readonly MAX_UNIFORM_BLOCK_SIZE: GLenum;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: GLenum;\n    readonly MAX_VARYING_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MIN: GLenum;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly OBJECT_TYPE: GLenum;\n    readonly PACK_ROW_LENGTH: GLenum;\n    readonly PACK_SKIP_PIXELS: GLenum;\n    readonly PACK_SKIP_ROWS: GLenum;\n    readonly PIXEL_PACK_BUFFER: GLenum;\n    readonly PIXEL_PACK_BUFFER_BINDING: GLenum;\n    readonly PIXEL_UNPACK_BUFFER: GLenum;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: GLenum;\n    readonly QUERY_RESULT: GLenum;\n    readonly QUERY_RESULT_AVAILABLE: GLenum;\n    readonly R11F_G11F_B10F: GLenum;\n    readonly R16F: GLenum;\n    readonly R16I: GLenum;\n    readonly R16UI: GLenum;\n    readonly R32F: GLenum;\n    readonly R32I: GLenum;\n    readonly R32UI: GLenum;\n    readonly R8: GLenum;\n    readonly R8I: GLenum;\n    readonly R8UI: GLenum;\n    readonly R8_SNORM: GLenum;\n    readonly RASTERIZER_DISCARD: GLenum;\n    readonly READ_BUFFER: GLenum;\n    readonly READ_FRAMEBUFFER: GLenum;\n    readonly READ_FRAMEBUFFER_BINDING: GLenum;\n    readonly RED: GLenum;\n    readonly RED_INTEGER: GLenum;\n    readonly RENDERBUFFER_SAMPLES: GLenum;\n    readonly RG: GLenum;\n    readonly RG16F: GLenum;\n    readonly RG16I: GLenum;\n    readonly RG16UI: GLenum;\n    readonly RG32F: GLenum;\n    readonly RG32I: GLenum;\n    readonly RG32UI: GLenum;\n    readonly RG8: GLenum;\n    readonly RG8I: GLenum;\n    readonly RG8UI: GLenum;\n    readonly RG8_SNORM: GLenum;\n    readonly RGB10_A2: GLenum;\n    readonly RGB10_A2UI: GLenum;\n    readonly RGB16F: GLenum;\n    readonly RGB16I: GLenum;\n    readonly RGB16UI: GLenum;\n    readonly RGB32F: GLenum;\n    readonly RGB32I: GLenum;\n    readonly RGB32UI: GLenum;\n    readonly RGB8: GLenum;\n    readonly RGB8I: GLenum;\n    readonly RGB8UI: GLenum;\n    readonly RGB8_SNORM: GLenum;\n    readonly RGB9_E5: GLenum;\n    readonly RGBA16F: GLenum;\n    readonly RGBA16I: GLenum;\n    readonly RGBA16UI: GLenum;\n    readonly RGBA32F: GLenum;\n    readonly RGBA32I: GLenum;\n    readonly RGBA32UI: GLenum;\n    readonly RGBA8: GLenum;\n    readonly RGBA8I: GLenum;\n    readonly RGBA8UI: GLenum;\n    readonly RGBA8_SNORM: GLenum;\n    readonly RGBA_INTEGER: GLenum;\n    readonly RGB_INTEGER: GLenum;\n    readonly RG_INTEGER: GLenum;\n    readonly SAMPLER_2D_ARRAY: GLenum;\n    readonly SAMPLER_2D_ARRAY_SHADOW: GLenum;\n    readonly SAMPLER_2D_SHADOW: GLenum;\n    readonly SAMPLER_3D: GLenum;\n    readonly SAMPLER_BINDING: GLenum;\n    readonly SAMPLER_CUBE_SHADOW: GLenum;\n    readonly SEPARATE_ATTRIBS: GLenum;\n    readonly SIGNALED: GLenum;\n    readonly SIGNED_NORMALIZED: GLenum;\n    readonly SRGB: GLenum;\n    readonly SRGB8: GLenum;\n    readonly SRGB8_ALPHA8: GLenum;\n    readonly STATIC_COPY: GLenum;\n    readonly STATIC_READ: GLenum;\n    readonly STENCIL: GLenum;\n    readonly STREAM_COPY: GLenum;\n    readonly STREAM_READ: GLenum;\n    readonly SYNC_CONDITION: GLenum;\n    readonly SYNC_FENCE: GLenum;\n    readonly SYNC_FLAGS: GLenum;\n    readonly SYNC_FLUSH_COMMANDS_BIT: GLenum;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: GLenum;\n    readonly SYNC_STATUS: GLenum;\n    readonly TEXTURE_2D_ARRAY: GLenum;\n    readonly TEXTURE_3D: GLenum;\n    readonly TEXTURE_BASE_LEVEL: GLenum;\n    readonly TEXTURE_BINDING_2D_ARRAY: GLenum;\n    readonly TEXTURE_BINDING_3D: GLenum;\n    readonly TEXTURE_COMPARE_FUNC: GLenum;\n    readonly TEXTURE_COMPARE_MODE: GLenum;\n    readonly TEXTURE_IMMUTABLE_FORMAT: GLenum;\n    readonly TEXTURE_IMMUTABLE_LEVELS: GLenum;\n    readonly TEXTURE_MAX_LEVEL: GLenum;\n    readonly TEXTURE_MAX_LOD: GLenum;\n    readonly TEXTURE_MIN_LOD: GLenum;\n    readonly TEXTURE_WRAP_R: GLenum;\n    readonly TIMEOUT_EXPIRED: GLenum;\n    readonly TIMEOUT_IGNORED: GLint64;\n    readonly TRANSFORM_FEEDBACK: GLenum;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: GLenum;\n    readonly TRANSFORM_FEEDBACK_PAUSED: GLenum;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: GLenum;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: GLenum;\n    readonly UNIFORM_ARRAY_STRIDE: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: GLenum;\n    readonly UNIFORM_BLOCK_BINDING: GLenum;\n    readonly UNIFORM_BLOCK_DATA_SIZE: GLenum;\n    readonly UNIFORM_BLOCK_INDEX: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: GLenum;\n    readonly UNIFORM_BUFFER: GLenum;\n    readonly UNIFORM_BUFFER_BINDING: GLenum;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: GLenum;\n    readonly UNIFORM_BUFFER_SIZE: GLenum;\n    readonly UNIFORM_BUFFER_START: GLenum;\n    readonly UNIFORM_IS_ROW_MAJOR: GLenum;\n    readonly UNIFORM_MATRIX_STRIDE: GLenum;\n    readonly UNIFORM_OFFSET: GLenum;\n    readonly UNIFORM_SIZE: GLenum;\n    readonly UNIFORM_TYPE: GLenum;\n    readonly UNPACK_IMAGE_HEIGHT: GLenum;\n    readonly UNPACK_ROW_LENGTH: GLenum;\n    readonly UNPACK_SKIP_IMAGES: GLenum;\n    readonly UNPACK_SKIP_PIXELS: GLenum;\n    readonly UNPACK_SKIP_ROWS: GLenum;\n    readonly UNSIGNALED: GLenum;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: GLenum;\n    readonly UNSIGNED_INT_24_8: GLenum;\n    readonly UNSIGNED_INT_2_10_10_10_REV: GLenum;\n    readonly UNSIGNED_INT_5_9_9_9_REV: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_3D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: GLenum;\n    readonly UNSIGNED_INT_VEC2: GLenum;\n    readonly UNSIGNED_INT_VEC3: GLenum;\n    readonly UNSIGNED_INT_VEC4: GLenum;\n    readonly UNSIGNED_NORMALIZED: GLenum;\n    readonly VERTEX_ARRAY_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: GLenum;\n    readonly WAIT_FAILED: GLenum;\n};\n\ninterface WebGL2RenderingContextBase {\n    beginQuery(target: GLenum, query: WebGLQuery): void;\n    beginTransformFeedback(primitiveMode: GLenum): void;\n    bindBufferBase(\n        target: GLenum,\n        index: GLuint,\n        buffer: WebGLBuffer | null\n    ): void;\n    bindBufferRange(\n        target: GLenum,\n        index: GLuint,\n        buffer: WebGLBuffer | null,\n        offset: GLintptr,\n        size: GLsizeiptr\n    ): void;\n    bindSampler(unit: GLuint, sampler: WebGLSampler | null): void;\n    bindTransformFeedback(\n        target: GLenum,\n        tf: WebGLTransformFeedback | null\n    ): void;\n    bindVertexArray(array: WebGLVertexArrayObject | null): void;\n    blitFramebuffer(\n        srcX0: GLint,\n        srcY0: GLint,\n        srcX1: GLint,\n        srcY1: GLint,\n        dstX0: GLint,\n        dstY0: GLint,\n        dstX1: GLint,\n        dstY1: GLint,\n        mask: GLbitfield,\n        filter: GLenum\n    ): void;\n    clearBufferfi(\n        buffer: GLenum,\n        drawbuffer: GLint,\n        depth: GLfloat,\n        stencil: GLint\n    ): void;\n    clearBufferfv(\n        buffer: GLenum,\n        drawbuffer: GLint,\n        values: Float32List,\n        srcOffset?: GLuint\n    ): void;\n    clearBufferiv(\n        buffer: GLenum,\n        drawbuffer: GLint,\n        values: Int32List,\n        srcOffset?: GLuint\n    ): void;\n    clearBufferuiv(\n        buffer: GLenum,\n        drawbuffer: GLint,\n        values: Uint32List,\n        srcOffset?: GLuint\n    ): void;\n    clientWaitSync(\n        sync: WebGLSync,\n        flags: GLbitfield,\n        timeout: GLuint64\n    ): GLenum;\n    compressedTexImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        imageSize: GLsizei,\n        offset: GLintptr\n    ): void;\n    compressedTexImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        srcData: ArrayBufferView,\n        srcOffset?: GLuint,\n        srcLengthOverride?: GLuint\n    ): void;\n    compressedTexSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        format: GLenum,\n        imageSize: GLsizei,\n        offset: GLintptr\n    ): void;\n    compressedTexSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        format: GLenum,\n        srcData: ArrayBufferView,\n        srcOffset?: GLuint,\n        srcLengthOverride?: GLuint\n    ): void;\n    copyBufferSubData(\n        readTarget: GLenum,\n        writeTarget: GLenum,\n        readOffset: GLintptr,\n        writeOffset: GLintptr,\n        size: GLsizeiptr\n    ): void;\n    copyTexSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    createQuery(): WebGLQuery | null;\n    createSampler(): WebGLSampler | null;\n    createTransformFeedback(): WebGLTransformFeedback | null;\n    createVertexArray(): WebGLVertexArrayObject | null;\n    deleteQuery(query: WebGLQuery | null): void;\n    deleteSampler(sampler: WebGLSampler | null): void;\n    deleteSync(sync: WebGLSync | null): void;\n    deleteTransformFeedback(tf: WebGLTransformFeedback | null): void;\n    deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;\n    drawArraysInstanced(\n        mode: GLenum,\n        first: GLint,\n        count: GLsizei,\n        instanceCount: GLsizei\n    ): void;\n    drawBuffers(buffers: GLenum[]): void;\n    drawElementsInstanced(\n        mode: GLenum,\n        count: GLsizei,\n        type: GLenum,\n        offset: GLintptr,\n        instanceCount: GLsizei\n    ): void;\n    drawRangeElements(\n        mode: GLenum,\n        start: GLuint,\n        end: GLuint,\n        count: GLsizei,\n        type: GLenum,\n        offset: GLintptr\n    ): void;\n    endQuery(target: GLenum): void;\n    endTransformFeedback(): void;\n    fenceSync(condition: GLenum, flags: GLbitfield): WebGLSync | null;\n    framebufferTextureLayer(\n        target: GLenum,\n        attachment: GLenum,\n        texture: WebGLTexture | null,\n        level: GLint,\n        layer: GLint\n    ): void;\n    getActiveUniformBlockName(\n        program: WebGLProgram,\n        uniformBlockIndex: GLuint\n    ): string | null;\n    getActiveUniformBlockParameter(\n        program: WebGLProgram,\n        uniformBlockIndex: GLuint,\n        pname: GLenum\n    ): any;\n    getActiveUniforms(\n        program: WebGLProgram,\n        uniformIndices: GLuint[],\n        pname: GLenum\n    ): any;\n    getBufferSubData(\n        target: GLenum,\n        srcByteOffset: GLintptr,\n        dstBuffer: ArrayBufferView,\n        dstOffset?: GLuint,\n        length?: GLuint\n    ): void;\n    getFragDataLocation(program: WebGLProgram, name: string): GLint;\n    getIndexedParameter(target: GLenum, index: GLuint): any;\n    getInternalformatParameter(\n        target: GLenum,\n        internalformat: GLenum,\n        pname: GLenum\n    ): any;\n    getQuery(target: GLenum, pname: GLenum): WebGLQuery | null;\n    getQueryParameter(query: WebGLQuery, pname: GLenum): any;\n    getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;\n    getSyncParameter(sync: WebGLSync, pname: GLenum): any;\n    getTransformFeedbackVarying(\n        program: WebGLProgram,\n        index: GLuint\n    ): WebGLActiveInfo | null;\n    getUniformBlockIndex(\n        program: WebGLProgram,\n        uniformBlockName: string\n    ): GLuint;\n    getUniformIndices(\n        program: WebGLProgram,\n        uniformNames: string[]\n    ): GLuint[] | null;\n    invalidateFramebuffer(target: GLenum, attachments: GLenum[]): void;\n    invalidateSubFramebuffer(\n        target: GLenum,\n        attachments: GLenum[],\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    isQuery(query: WebGLQuery | null): GLboolean;\n    isSampler(sampler: WebGLSampler | null): GLboolean;\n    isSync(sync: WebGLSync | null): GLboolean;\n    isTransformFeedback(tf: WebGLTransformFeedback | null): GLboolean;\n    isVertexArray(vertexArray: WebGLVertexArrayObject | null): GLboolean;\n    pauseTransformFeedback(): void;\n    readBuffer(src: GLenum): void;\n    renderbufferStorageMultisample(\n        target: GLenum,\n        samples: GLsizei,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    resumeTransformFeedback(): void;\n    samplerParameterf(\n        sampler: WebGLSampler,\n        pname: GLenum,\n        param: GLfloat\n    ): void;\n    samplerParameteri(sampler: WebGLSampler, pname: GLenum, param: GLint): void;\n    texImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        pboOffset: GLintptr\n    ): void;\n    texImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        srcData: ArrayBufferView | null\n    ): void;\n    texImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        srcData: ArrayBufferView,\n        srcOffset: GLuint\n    ): void;\n    texStorage2D(\n        target: GLenum,\n        levels: GLsizei,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    texStorage3D(\n        target: GLenum,\n        levels: GLsizei,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei\n    ): void;\n    texSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        pboOffset: GLintptr\n    ): void;\n    texSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        srcData: ArrayBufferView | null,\n        srcOffset?: GLuint\n    ): void;\n    transformFeedbackVaryings(\n        program: WebGLProgram,\n        varyings: string[],\n        bufferMode: GLenum\n    ): void;\n    uniform1ui(location: WebGLUniformLocation | null, v0: GLuint): void;\n    uniform1uiv(\n        location: WebGLUniformLocation | null,\n        data: Uint32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform2ui(\n        location: WebGLUniformLocation | null,\n        v0: GLuint,\n        v1: GLuint\n    ): void;\n    uniform2uiv(\n        location: WebGLUniformLocation | null,\n        data: Uint32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform3ui(\n        location: WebGLUniformLocation | null,\n        v0: GLuint,\n        v1: GLuint,\n        v2: GLuint\n    ): void;\n    uniform3uiv(\n        location: WebGLUniformLocation | null,\n        data: Uint32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform4ui(\n        location: WebGLUniformLocation | null,\n        v0: GLuint,\n        v1: GLuint,\n        v2: GLuint,\n        v3: GLuint\n    ): void;\n    uniform4uiv(\n        location: WebGLUniformLocation | null,\n        data: Uint32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformBlockBinding(\n        program: WebGLProgram,\n        uniformBlockIndex: GLuint,\n        uniformBlockBinding: GLuint\n    ): void;\n    uniformMatrix2x3fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix2x4fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix3x2fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix3x4fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix4x2fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix4x3fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    vertexAttribDivisor(index: GLuint, divisor: GLuint): void;\n    vertexAttribI4i(\n        index: GLuint,\n        x: GLint,\n        y: GLint,\n        z: GLint,\n        w: GLint\n    ): void;\n    vertexAttribI4iv(index: GLuint, values: Int32List): void;\n    vertexAttribI4ui(\n        index: GLuint,\n        x: GLuint,\n        y: GLuint,\n        z: GLuint,\n        w: GLuint\n    ): void;\n    vertexAttribI4uiv(index: GLuint, values: Uint32List): void;\n    vertexAttribIPointer(\n        index: GLuint,\n        size: GLint,\n        type: GLenum,\n        stride: GLsizei,\n        offset: GLintptr\n    ): void;\n    waitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLint64): void;\n    readonly ACTIVE_UNIFORM_BLOCKS: GLenum;\n    readonly ALREADY_SIGNALED: GLenum;\n    readonly ANY_SAMPLES_PASSED: GLenum;\n    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: GLenum;\n    readonly COLOR: GLenum;\n    readonly COLOR_ATTACHMENT1: GLenum;\n    readonly COLOR_ATTACHMENT10: GLenum;\n    readonly COLOR_ATTACHMENT11: GLenum;\n    readonly COLOR_ATTACHMENT12: GLenum;\n    readonly COLOR_ATTACHMENT13: GLenum;\n    readonly COLOR_ATTACHMENT14: GLenum;\n    readonly COLOR_ATTACHMENT15: GLenum;\n    readonly COLOR_ATTACHMENT2: GLenum;\n    readonly COLOR_ATTACHMENT3: GLenum;\n    readonly COLOR_ATTACHMENT4: GLenum;\n    readonly COLOR_ATTACHMENT5: GLenum;\n    readonly COLOR_ATTACHMENT6: GLenum;\n    readonly COLOR_ATTACHMENT7: GLenum;\n    readonly COLOR_ATTACHMENT8: GLenum;\n    readonly COLOR_ATTACHMENT9: GLenum;\n    readonly COMPARE_REF_TO_TEXTURE: GLenum;\n    readonly CONDITION_SATISFIED: GLenum;\n    readonly COPY_READ_BUFFER: GLenum;\n    readonly COPY_READ_BUFFER_BINDING: GLenum;\n    readonly COPY_WRITE_BUFFER: GLenum;\n    readonly COPY_WRITE_BUFFER_BINDING: GLenum;\n    readonly CURRENT_QUERY: GLenum;\n    readonly DEPTH: GLenum;\n    readonly DEPTH24_STENCIL8: GLenum;\n    readonly DEPTH32F_STENCIL8: GLenum;\n    readonly DEPTH_COMPONENT24: GLenum;\n    readonly DEPTH_COMPONENT32F: GLenum;\n    readonly DRAW_BUFFER0: GLenum;\n    readonly DRAW_BUFFER1: GLenum;\n    readonly DRAW_BUFFER10: GLenum;\n    readonly DRAW_BUFFER11: GLenum;\n    readonly DRAW_BUFFER12: GLenum;\n    readonly DRAW_BUFFER13: GLenum;\n    readonly DRAW_BUFFER14: GLenum;\n    readonly DRAW_BUFFER15: GLenum;\n    readonly DRAW_BUFFER2: GLenum;\n    readonly DRAW_BUFFER3: GLenum;\n    readonly DRAW_BUFFER4: GLenum;\n    readonly DRAW_BUFFER5: GLenum;\n    readonly DRAW_BUFFER6: GLenum;\n    readonly DRAW_BUFFER7: GLenum;\n    readonly DRAW_BUFFER8: GLenum;\n    readonly DRAW_BUFFER9: GLenum;\n    readonly DRAW_FRAMEBUFFER: GLenum;\n    readonly DRAW_FRAMEBUFFER_BINDING: GLenum;\n    readonly DYNAMIC_COPY: GLenum;\n    readonly DYNAMIC_READ: GLenum;\n    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: GLenum;\n    readonly FLOAT_MAT2x3: GLenum;\n    readonly FLOAT_MAT2x4: GLenum;\n    readonly FLOAT_MAT3x2: GLenum;\n    readonly FLOAT_MAT3x4: GLenum;\n    readonly FLOAT_MAT4x2: GLenum;\n    readonly FLOAT_MAT4x3: GLenum;\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: GLenum;\n    readonly FRAMEBUFFER_DEFAULT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: GLenum;\n    readonly HALF_FLOAT: GLenum;\n    readonly INTERLEAVED_ATTRIBS: GLenum;\n    readonly INT_2_10_10_10_REV: GLenum;\n    readonly INT_SAMPLER_2D: GLenum;\n    readonly INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly INT_SAMPLER_3D: GLenum;\n    readonly INT_SAMPLER_CUBE: GLenum;\n    readonly INVALID_INDEX: GLenum;\n    readonly MAX: GLenum;\n    readonly MAX_3D_TEXTURE_SIZE: GLenum;\n    readonly MAX_ARRAY_TEXTURE_LAYERS: GLenum;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: GLenum;\n    readonly MAX_COLOR_ATTACHMENTS: GLenum;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_DRAW_BUFFERS: GLenum;\n    readonly MAX_ELEMENTS_INDICES: GLenum;\n    readonly MAX_ELEMENTS_VERTICES: GLenum;\n    readonly MAX_ELEMENT_INDEX: GLenum;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly MAX_SAMPLES: GLenum;\n    readonly MAX_SERVER_WAIT_TIMEOUT: GLenum;\n    readonly MAX_TEXTURE_LOD_BIAS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: GLenum;\n    readonly MAX_UNIFORM_BLOCK_SIZE: GLenum;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: GLenum;\n    readonly MAX_VARYING_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MIN: GLenum;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly OBJECT_TYPE: GLenum;\n    readonly PACK_ROW_LENGTH: GLenum;\n    readonly PACK_SKIP_PIXELS: GLenum;\n    readonly PACK_SKIP_ROWS: GLenum;\n    readonly PIXEL_PACK_BUFFER: GLenum;\n    readonly PIXEL_PACK_BUFFER_BINDING: GLenum;\n    readonly PIXEL_UNPACK_BUFFER: GLenum;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: GLenum;\n    readonly QUERY_RESULT: GLenum;\n    readonly QUERY_RESULT_AVAILABLE: GLenum;\n    readonly R11F_G11F_B10F: GLenum;\n    readonly R16F: GLenum;\n    readonly R16I: GLenum;\n    readonly R16UI: GLenum;\n    readonly R32F: GLenum;\n    readonly R32I: GLenum;\n    readonly R32UI: GLenum;\n    readonly R8: GLenum;\n    readonly R8I: GLenum;\n    readonly R8UI: GLenum;\n    readonly R8_SNORM: GLenum;\n    readonly RASTERIZER_DISCARD: GLenum;\n    readonly READ_BUFFER: GLenum;\n    readonly READ_FRAMEBUFFER: GLenum;\n    readonly READ_FRAMEBUFFER_BINDING: GLenum;\n    readonly RED: GLenum;\n    readonly RED_INTEGER: GLenum;\n    readonly RENDERBUFFER_SAMPLES: GLenum;\n    readonly RG: GLenum;\n    readonly RG16F: GLenum;\n    readonly RG16I: GLenum;\n    readonly RG16UI: GLenum;\n    readonly RG32F: GLenum;\n    readonly RG32I: GLenum;\n    readonly RG32UI: GLenum;\n    readonly RG8: GLenum;\n    readonly RG8I: GLenum;\n    readonly RG8UI: GLenum;\n    readonly RG8_SNORM: GLenum;\n    readonly RGB10_A2: GLenum;\n    readonly RGB10_A2UI: GLenum;\n    readonly RGB16F: GLenum;\n    readonly RGB16I: GLenum;\n    readonly RGB16UI: GLenum;\n    readonly RGB32F: GLenum;\n    readonly RGB32I: GLenum;\n    readonly RGB32UI: GLenum;\n    readonly RGB8: GLenum;\n    readonly RGB8I: GLenum;\n    readonly RGB8UI: GLenum;\n    readonly RGB8_SNORM: GLenum;\n    readonly RGB9_E5: GLenum;\n    readonly RGBA16F: GLenum;\n    readonly RGBA16I: GLenum;\n    readonly RGBA16UI: GLenum;\n    readonly RGBA32F: GLenum;\n    readonly RGBA32I: GLenum;\n    readonly RGBA32UI: GLenum;\n    readonly RGBA8: GLenum;\n    readonly RGBA8I: GLenum;\n    readonly RGBA8UI: GLenum;\n    readonly RGBA8_SNORM: GLenum;\n    readonly RGBA_INTEGER: GLenum;\n    readonly RGB_INTEGER: GLenum;\n    readonly RG_INTEGER: GLenum;\n    readonly SAMPLER_2D_ARRAY: GLenum;\n    readonly SAMPLER_2D_ARRAY_SHADOW: GLenum;\n    readonly SAMPLER_2D_SHADOW: GLenum;\n    readonly SAMPLER_3D: GLenum;\n    readonly SAMPLER_BINDING: GLenum;\n    readonly SAMPLER_CUBE_SHADOW: GLenum;\n    readonly SEPARATE_ATTRIBS: GLenum;\n    readonly SIGNALED: GLenum;\n    readonly SIGNED_NORMALIZED: GLenum;\n    readonly SRGB: GLenum;\n    readonly SRGB8: GLenum;\n    readonly SRGB8_ALPHA8: GLenum;\n    readonly STATIC_COPY: GLenum;\n    readonly STATIC_READ: GLenum;\n    readonly STENCIL: GLenum;\n    readonly STREAM_COPY: GLenum;\n    readonly STREAM_READ: GLenum;\n    readonly SYNC_CONDITION: GLenum;\n    readonly SYNC_FENCE: GLenum;\n    readonly SYNC_FLAGS: GLenum;\n    readonly SYNC_FLUSH_COMMANDS_BIT: GLenum;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: GLenum;\n    readonly SYNC_STATUS: GLenum;\n    readonly TEXTURE_2D_ARRAY: GLenum;\n    readonly TEXTURE_3D: GLenum;\n    readonly TEXTURE_BASE_LEVEL: GLenum;\n    readonly TEXTURE_BINDING_2D_ARRAY: GLenum;\n    readonly TEXTURE_BINDING_3D: GLenum;\n    readonly TEXTURE_COMPARE_FUNC: GLenum;\n    readonly TEXTURE_COMPARE_MODE: GLenum;\n    readonly TEXTURE_IMMUTABLE_FORMAT: GLenum;\n    readonly TEXTURE_IMMUTABLE_LEVELS: GLenum;\n    readonly TEXTURE_MAX_LEVEL: GLenum;\n    readonly TEXTURE_MAX_LOD: GLenum;\n    readonly TEXTURE_MIN_LOD: GLenum;\n    readonly TEXTURE_WRAP_R: GLenum;\n    readonly TIMEOUT_EXPIRED: GLenum;\n    readonly TIMEOUT_IGNORED: GLint64;\n    readonly TRANSFORM_FEEDBACK: GLenum;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: GLenum;\n    readonly TRANSFORM_FEEDBACK_PAUSED: GLenum;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: GLenum;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: GLenum;\n    readonly UNIFORM_ARRAY_STRIDE: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: GLenum;\n    readonly UNIFORM_BLOCK_BINDING: GLenum;\n    readonly UNIFORM_BLOCK_DATA_SIZE: GLenum;\n    readonly UNIFORM_BLOCK_INDEX: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: GLenum;\n    readonly UNIFORM_BUFFER: GLenum;\n    readonly UNIFORM_BUFFER_BINDING: GLenum;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: GLenum;\n    readonly UNIFORM_BUFFER_SIZE: GLenum;\n    readonly UNIFORM_BUFFER_START: GLenum;\n    readonly UNIFORM_IS_ROW_MAJOR: GLenum;\n    readonly UNIFORM_MATRIX_STRIDE: GLenum;\n    readonly UNIFORM_OFFSET: GLenum;\n    readonly UNIFORM_SIZE: GLenum;\n    readonly UNIFORM_TYPE: GLenum;\n    readonly UNPACK_IMAGE_HEIGHT: GLenum;\n    readonly UNPACK_ROW_LENGTH: GLenum;\n    readonly UNPACK_SKIP_IMAGES: GLenum;\n    readonly UNPACK_SKIP_PIXELS: GLenum;\n    readonly UNPACK_SKIP_ROWS: GLenum;\n    readonly UNSIGNALED: GLenum;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: GLenum;\n    readonly UNSIGNED_INT_24_8: GLenum;\n    readonly UNSIGNED_INT_2_10_10_10_REV: GLenum;\n    readonly UNSIGNED_INT_5_9_9_9_REV: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_3D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: GLenum;\n    readonly UNSIGNED_INT_VEC2: GLenum;\n    readonly UNSIGNED_INT_VEC3: GLenum;\n    readonly UNSIGNED_INT_VEC4: GLenum;\n    readonly UNSIGNED_NORMALIZED: GLenum;\n    readonly VERTEX_ARRAY_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: GLenum;\n    readonly WAIT_FAILED: GLenum;\n}\n\ninterface WebGL2RenderingContextOverloads {\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(\n        target: GLenum,\n        srcData: BufferSource | null,\n        usage: GLenum\n    ): void;\n    bufferData(\n        target: GLenum,\n        srcData: ArrayBufferView,\n        usage: GLenum,\n        srcOffset: GLuint,\n        length?: GLuint\n    ): void;\n    bufferSubData(\n        target: GLenum,\n        dstByteOffset: GLintptr,\n        srcData: BufferSource\n    ): void;\n    bufferSubData(\n        target: GLenum,\n        dstByteOffset: GLintptr,\n        srcData: ArrayBufferView,\n        srcOffset: GLuint,\n        length?: GLuint\n    ): void;\n    compressedTexImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        imageSize: GLsizei,\n        offset: GLintptr\n    ): void;\n    compressedTexImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        srcData: ArrayBufferView,\n        srcOffset?: GLuint,\n        srcLengthOverride?: GLuint\n    ): void;\n    compressedTexSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        imageSize: GLsizei,\n        offset: GLintptr\n    ): void;\n    compressedTexSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        srcData: ArrayBufferView,\n        srcOffset?: GLuint,\n        srcLengthOverride?: GLuint\n    ): void;\n    readPixels(\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        dstData: ArrayBufferView | null\n    ): void;\n    readPixels(\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        offset: GLintptr\n    ): void;\n    readPixels(\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        dstData: ArrayBufferView,\n        dstOffset: GLuint\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        pixels: ArrayBufferView | null\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        pboOffset: GLintptr\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        srcData: ArrayBufferView,\n        srcOffset: GLuint\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        pixels: ArrayBufferView | null\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        pboOffset: GLintptr\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        srcData: ArrayBufferView,\n        srcOffset: GLuint\n    ): void;\n    uniform1fv(\n        location: WebGLUniformLocation | null,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform1iv(\n        location: WebGLUniformLocation | null,\n        data: Int32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform2fv(\n        location: WebGLUniformLocation | null,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform2iv(\n        location: WebGLUniformLocation | null,\n        data: Int32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform3fv(\n        location: WebGLUniformLocation | null,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform3iv(\n        location: WebGLUniformLocation | null,\n        data: Int32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform4fv(\n        location: WebGLUniformLocation | null,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform4iv(\n        location: WebGLUniformLocation | null,\n        data: Int32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix2fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix3fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix4fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n}\n\n/** Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getActiveAttrib() and WebGLRenderingContext.getActiveUniform() methods. */\ninterface WebGLActiveInfo {\n    readonly name: string;\n    readonly size: GLint;\n    readonly type: GLenum;\n}\n\ndeclare var WebGLActiveInfo: {\n    prototype: WebGLActiveInfo;\n    new (): WebGLActiveInfo;\n};\n\n/** Part of the WebGL API and represents an opaque buffer object storing data such as vertices or colors. */\ninterface WebGLBuffer extends WebGLObject {}\n\ndeclare var WebGLBuffer: {\n    prototype: WebGLBuffer;\n    new (): WebGLBuffer;\n};\n\n/** The WebContextEvent interface is part of the WebGL API and is an interface for an event that is generated in response to a status change to the WebGL rendering context. */\ninterface WebGLContextEvent extends Event {\n    readonly statusMessage: string;\n}\n\ndeclare var WebGLContextEvent: {\n    prototype: WebGLContextEvent;\n    new (type: string, eventInit?: WebGLContextEventInit): WebGLContextEvent;\n};\n\n/** Part of the WebGL API and represents a collection of buffers that serve as a rendering destination. */\ninterface WebGLFramebuffer extends WebGLObject {}\n\ndeclare var WebGLFramebuffer: {\n    prototype: WebGLFramebuffer;\n    new (): WebGLFramebuffer;\n};\n\ninterface WebGLObject {}\n\ndeclare var WebGLObject: {\n    prototype: WebGLObject;\n    new (): WebGLObject;\n};\n\n/** The WebGLProgram is part of the WebGL API and is a combination of two compiled WebGLShaders consisting of a vertex shader and a fragment shader (both written in GLSL). */\ninterface WebGLProgram extends WebGLObject {}\n\ndeclare var WebGLProgram: {\n    prototype: WebGLProgram;\n    new (): WebGLProgram;\n};\n\ninterface WebGLQuery extends WebGLObject {}\n\ndeclare var WebGLQuery: {\n    prototype: WebGLQuery;\n    new (): WebGLQuery;\n};\n\n/** Part of the WebGL API and represents a buffer that can contain an image, or can be source or target of an rendering operation. */\ninterface WebGLRenderbuffer extends WebGLObject {}\n\ndeclare var WebGLRenderbuffer: {\n    prototype: WebGLRenderbuffer;\n    new (): WebGLRenderbuffer;\n};\n\n/** Provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <canvas> element. */\ninterface WebGLRenderingContext\n    extends WebGLRenderingContextBase,\n        WebGLRenderingContextOverloads {}\n\ndeclare var WebGLRenderingContext: {\n    prototype: WebGLRenderingContext;\n    new (): WebGLRenderingContext;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALPHA: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly BACK: GLenum;\n    readonly BLEND: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly BYTE: GLenum;\n    readonly CCW: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly CW: GLenum;\n    readonly DECR: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DITHER: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly EQUAL: GLenum;\n    readonly FASTEST: GLenum;\n    readonly FLOAT: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRONT: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly INCR: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly INT: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVERT: GLenum;\n    readonly KEEP: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly LESS: GLenum;\n    readonly LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly NEVER: GLenum;\n    readonly NICEST: GLenum;\n    readonly NONE: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly ONE: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly POINTS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERER: GLenum;\n    readonly REPEAT: GLenum;\n    readonly REPLACE: GLenum;\n    readonly RGB: GLenum;\n    readonly RGB565: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGBA: GLenum;\n    readonly RGBA4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly SHORT: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly VENDOR: GLenum;\n    readonly VERSION: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly ZERO: GLenum;\n};\n\ninterface WebGLRenderingContextBase {\n    readonly canvas: OffscreenCanvas;\n    readonly drawingBufferHeight: GLsizei;\n    readonly drawingBufferWidth: GLsizei;\n    activeTexture(texture: GLenum): void;\n    attachShader(program: WebGLProgram, shader: WebGLShader): void;\n    bindAttribLocation(\n        program: WebGLProgram,\n        index: GLuint,\n        name: string\n    ): void;\n    bindBuffer(target: GLenum, buffer: WebGLBuffer | null): void;\n    bindFramebuffer(target: GLenum, framebuffer: WebGLFramebuffer | null): void;\n    bindRenderbuffer(\n        target: GLenum,\n        renderbuffer: WebGLRenderbuffer | null\n    ): void;\n    bindTexture(target: GLenum, texture: WebGLTexture | null): void;\n    blendColor(\n        red: GLclampf,\n        green: GLclampf,\n        blue: GLclampf,\n        alpha: GLclampf\n    ): void;\n    blendEquation(mode: GLenum): void;\n    blendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum): void;\n    blendFunc(sfactor: GLenum, dfactor: GLenum): void;\n    blendFuncSeparate(\n        srcRGB: GLenum,\n        dstRGB: GLenum,\n        srcAlpha: GLenum,\n        dstAlpha: GLenum\n    ): void;\n    checkFramebufferStatus(target: GLenum): GLenum;\n    clear(mask: GLbitfield): void;\n    clearColor(\n        red: GLclampf,\n        green: GLclampf,\n        blue: GLclampf,\n        alpha: GLclampf\n    ): void;\n    clearDepth(depth: GLclampf): void;\n    clearStencil(s: GLint): void;\n    colorMask(\n        red: GLboolean,\n        green: GLboolean,\n        blue: GLboolean,\n        alpha: GLboolean\n    ): void;\n    compileShader(shader: WebGLShader): void;\n    copyTexImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint\n    ): void;\n    copyTexSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    createBuffer(): WebGLBuffer | null;\n    createFramebuffer(): WebGLFramebuffer | null;\n    createProgram(): WebGLProgram | null;\n    createRenderbuffer(): WebGLRenderbuffer | null;\n    createShader(type: GLenum): WebGLShader | null;\n    createTexture(): WebGLTexture | null;\n    cullFace(mode: GLenum): void;\n    deleteBuffer(buffer: WebGLBuffer | null): void;\n    deleteFramebuffer(framebuffer: WebGLFramebuffer | null): void;\n    deleteProgram(program: WebGLProgram | null): void;\n    deleteRenderbuffer(renderbuffer: WebGLRenderbuffer | null): void;\n    deleteShader(shader: WebGLShader | null): void;\n    deleteTexture(texture: WebGLTexture | null): void;\n    depthFunc(func: GLenum): void;\n    depthMask(flag: GLboolean): void;\n    depthRange(zNear: GLclampf, zFar: GLclampf): void;\n    detachShader(program: WebGLProgram, shader: WebGLShader): void;\n    disable(cap: GLenum): void;\n    disableVertexAttribArray(index: GLuint): void;\n    drawArrays(mode: GLenum, first: GLint, count: GLsizei): void;\n    drawElements(\n        mode: GLenum,\n        count: GLsizei,\n        type: GLenum,\n        offset: GLintptr\n    ): void;\n    enable(cap: GLenum): void;\n    enableVertexAttribArray(index: GLuint): void;\n    finish(): void;\n    flush(): void;\n    framebufferRenderbuffer(\n        target: GLenum,\n        attachment: GLenum,\n        renderbuffertarget: GLenum,\n        renderbuffer: WebGLRenderbuffer | null\n    ): void;\n    framebufferTexture2D(\n        target: GLenum,\n        attachment: GLenum,\n        textarget: GLenum,\n        texture: WebGLTexture | null,\n        level: GLint\n    ): void;\n    frontFace(mode: GLenum): void;\n    generateMipmap(target: GLenum): void;\n    getActiveAttrib(\n        program: WebGLProgram,\n        index: GLuint\n    ): WebGLActiveInfo | null;\n    getActiveUniform(\n        program: WebGLProgram,\n        index: GLuint\n    ): WebGLActiveInfo | null;\n    getAttachedShaders(program: WebGLProgram): WebGLShader[] | null;\n    getAttribLocation(program: WebGLProgram, name: string): GLint;\n    getBufferParameter(target: GLenum, pname: GLenum): any;\n    getContextAttributes(): WebGLContextAttributes | null;\n    getError(): GLenum;\n    getExtension(extensionName: 'EXT_blend_minmax'): EXT_blend_minmax | null;\n    getExtension(\n        extensionName: 'EXT_texture_filter_anisotropic'\n    ): EXT_texture_filter_anisotropic | null;\n    getExtension(extensionName: 'EXT_frag_depth'): EXT_frag_depth | null;\n    getExtension(\n        extensionName: 'EXT_shader_texture_lod'\n    ): EXT_shader_texture_lod | null;\n    getExtension(extensionName: 'EXT_sRGB'): EXT_sRGB | null;\n    getExtension(\n        extensionName: 'OES_vertex_array_object'\n    ): OES_vertex_array_object | null;\n    getExtension(\n        extensionName: 'WEBGL_color_buffer_float'\n    ): WEBGL_color_buffer_float | null;\n    getExtension(\n        extensionName: 'WEBGL_compressed_texture_astc'\n    ): WEBGL_compressed_texture_astc | null;\n    getExtension(\n        extensionName: 'WEBGL_compressed_texture_s3tc_srgb'\n    ): WEBGL_compressed_texture_s3tc_srgb | null;\n    getExtension(\n        extensionName: 'WEBGL_debug_shaders'\n    ): WEBGL_debug_shaders | null;\n    getExtension(\n        extensionName: 'WEBGL_draw_buffers'\n    ): WEBGL_draw_buffers | null;\n    getExtension(\n        extensionName: 'WEBGL_lose_context'\n    ): WEBGL_lose_context | null;\n    getExtension(\n        extensionName: 'WEBGL_depth_texture'\n    ): WEBGL_depth_texture | null;\n    getExtension(\n        extensionName: 'WEBGL_debug_renderer_info'\n    ): WEBGL_debug_renderer_info | null;\n    getExtension(\n        extensionName: 'WEBGL_compressed_texture_s3tc'\n    ): WEBGL_compressed_texture_s3tc | null;\n    getExtension(\n        extensionName: 'OES_texture_half_float_linear'\n    ): OES_texture_half_float_linear | null;\n    getExtension(\n        extensionName: 'OES_texture_half_float'\n    ): OES_texture_half_float | null;\n    getExtension(\n        extensionName: 'OES_texture_float_linear'\n    ): OES_texture_float_linear | null;\n    getExtension(extensionName: 'OES_texture_float'): OES_texture_float | null;\n    getExtension(\n        extensionName: 'OES_standard_derivatives'\n    ): OES_standard_derivatives | null;\n    getExtension(\n        extensionName: 'OES_element_index_uint'\n    ): OES_element_index_uint | null;\n    getExtension(\n        extensionName: 'ANGLE_instanced_arrays'\n    ): ANGLE_instanced_arrays | null;\n    getExtension(extensionName: string): any;\n    getFramebufferAttachmentParameter(\n        target: GLenum,\n        attachment: GLenum,\n        pname: GLenum\n    ): any;\n    getParameter(pname: GLenum): any;\n    getProgramInfoLog(program: WebGLProgram): string | null;\n    getProgramParameter(program: WebGLProgram, pname: GLenum): any;\n    getRenderbufferParameter(target: GLenum, pname: GLenum): any;\n    getShaderInfoLog(shader: WebGLShader): string | null;\n    getShaderParameter(shader: WebGLShader, pname: GLenum): any;\n    getShaderPrecisionFormat(\n        shadertype: GLenum,\n        precisiontype: GLenum\n    ): WebGLShaderPrecisionFormat | null;\n    getShaderSource(shader: WebGLShader): string | null;\n    getSupportedExtensions(): string[] | null;\n    getTexParameter(target: GLenum, pname: GLenum): any;\n    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;\n    getUniformLocation(\n        program: WebGLProgram,\n        name: string\n    ): WebGLUniformLocation | null;\n    getVertexAttrib(index: GLuint, pname: GLenum): any;\n    getVertexAttribOffset(index: GLuint, pname: GLenum): GLintptr;\n    hint(target: GLenum, mode: GLenum): void;\n    isBuffer(buffer: WebGLBuffer | null): GLboolean;\n    isContextLost(): boolean;\n    isEnabled(cap: GLenum): GLboolean;\n    isFramebuffer(framebuffer: WebGLFramebuffer | null): GLboolean;\n    isProgram(program: WebGLProgram | null): GLboolean;\n    isRenderbuffer(renderbuffer: WebGLRenderbuffer | null): GLboolean;\n    isShader(shader: WebGLShader | null): GLboolean;\n    isTexture(texture: WebGLTexture | null): GLboolean;\n    lineWidth(width: GLfloat): void;\n    linkProgram(program: WebGLProgram): void;\n    pixelStorei(pname: GLenum, param: GLint | GLboolean): void;\n    polygonOffset(factor: GLfloat, units: GLfloat): void;\n    renderbufferStorage(\n        target: GLenum,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    sampleCoverage(value: GLclampf, invert: GLboolean): void;\n    scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    shaderSource(shader: WebGLShader, source: string): void;\n    stencilFunc(func: GLenum, ref: GLint, mask: GLuint): void;\n    stencilFuncSeparate(\n        face: GLenum,\n        func: GLenum,\n        ref: GLint,\n        mask: GLuint\n    ): void;\n    stencilMask(mask: GLuint): void;\n    stencilMaskSeparate(face: GLenum, mask: GLuint): void;\n    stencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    stencilOpSeparate(\n        face: GLenum,\n        fail: GLenum,\n        zfail: GLenum,\n        zpass: GLenum\n    ): void;\n    texParameterf(target: GLenum, pname: GLenum, param: GLfloat): void;\n    texParameteri(target: GLenum, pname: GLenum, param: GLint): void;\n    uniform1f(location: WebGLUniformLocation | null, x: GLfloat): void;\n    uniform1i(location: WebGLUniformLocation | null, x: GLint): void;\n    uniform2f(\n        location: WebGLUniformLocation | null,\n        x: GLfloat,\n        y: GLfloat\n    ): void;\n    uniform2i(location: WebGLUniformLocation | null, x: GLint, y: GLint): void;\n    uniform3f(\n        location: WebGLUniformLocation | null,\n        x: GLfloat,\n        y: GLfloat,\n        z: GLfloat\n    ): void;\n    uniform3i(\n        location: WebGLUniformLocation | null,\n        x: GLint,\n        y: GLint,\n        z: GLint\n    ): void;\n    uniform4f(\n        location: WebGLUniformLocation | null,\n        x: GLfloat,\n        y: GLfloat,\n        z: GLfloat,\n        w: GLfloat\n    ): void;\n    uniform4i(\n        location: WebGLUniformLocation | null,\n        x: GLint,\n        y: GLint,\n        z: GLint,\n        w: GLint\n    ): void;\n    useProgram(program: WebGLProgram | null): void;\n    validateProgram(program: WebGLProgram): void;\n    vertexAttrib1f(index: GLuint, x: GLfloat): void;\n    vertexAttrib1fv(index: GLuint, values: Float32List): void;\n    vertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat): void;\n    vertexAttrib2fv(index: GLuint, values: Float32List): void;\n    vertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    vertexAttrib3fv(index: GLuint, values: Float32List): void;\n    vertexAttrib4f(\n        index: GLuint,\n        x: GLfloat,\n        y: GLfloat,\n        z: GLfloat,\n        w: GLfloat\n    ): void;\n    vertexAttrib4fv(index: GLuint, values: Float32List): void;\n    vertexAttribPointer(\n        index: GLuint,\n        size: GLint,\n        type: GLenum,\n        normalized: GLboolean,\n        stride: GLsizei,\n        offset: GLintptr\n    ): void;\n    viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALPHA: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly BACK: GLenum;\n    readonly BLEND: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly BYTE: GLenum;\n    readonly CCW: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly CW: GLenum;\n    readonly DECR: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DITHER: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly EQUAL: GLenum;\n    readonly FASTEST: GLenum;\n    readonly FLOAT: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRONT: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly INCR: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly INT: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVERT: GLenum;\n    readonly KEEP: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly LESS: GLenum;\n    readonly LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly NEVER: GLenum;\n    readonly NICEST: GLenum;\n    readonly NONE: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly ONE: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly POINTS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERER: GLenum;\n    readonly REPEAT: GLenum;\n    readonly REPLACE: GLenum;\n    readonly RGB: GLenum;\n    readonly RGB565: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGBA: GLenum;\n    readonly RGBA4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly SHORT: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly VENDOR: GLenum;\n    readonly VERSION: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly ZERO: GLenum;\n}\n\ninterface WebGLRenderingContextOverloads {\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(target: GLenum, data: BufferSource | null, usage: GLenum): void;\n    bufferSubData(target: GLenum, offset: GLintptr, data: BufferSource): void;\n    compressedTexImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        data: ArrayBufferView\n    ): void;\n    compressedTexSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        data: ArrayBufferView\n    ): void;\n    readPixels(\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        pixels: ArrayBufferView | null\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        pixels: ArrayBufferView | null\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        pixels: ArrayBufferView | null\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    uniform1fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform1iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform2fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform2iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform3fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform3iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform4fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform4iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniformMatrix2fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        value: Float32List\n    ): void;\n    uniformMatrix3fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        value: Float32List\n    ): void;\n    uniformMatrix4fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        value: Float32List\n    ): void;\n}\n\ninterface WebGLSampler extends WebGLObject {}\n\ndeclare var WebGLSampler: {\n    prototype: WebGLSampler;\n    new (): WebGLSampler;\n};\n\n/** The WebGLShader is part of the WebGL API and can either be a vertex or a fragment shader. A WebGLProgram requires both types of shaders. */\ninterface WebGLShader extends WebGLObject {}\n\ndeclare var WebGLShader: {\n    prototype: WebGLShader;\n    new (): WebGLShader;\n};\n\n/** Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getShaderPrecisionFormat() method. */\ninterface WebGLShaderPrecisionFormat {\n    readonly precision: GLint;\n    readonly rangeMax: GLint;\n    readonly rangeMin: GLint;\n}\n\ndeclare var WebGLShaderPrecisionFormat: {\n    prototype: WebGLShaderPrecisionFormat;\n    new (): WebGLShaderPrecisionFormat;\n};\n\ninterface WebGLSync extends WebGLObject {}\n\ndeclare var WebGLSync: {\n    prototype: WebGLSync;\n    new (): WebGLSync;\n};\n\n/** Part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations. */\ninterface WebGLTexture extends WebGLObject {}\n\ndeclare var WebGLTexture: {\n    prototype: WebGLTexture;\n    new (): WebGLTexture;\n};\n\ninterface WebGLTransformFeedback extends WebGLObject {}\n\ndeclare var WebGLTransformFeedback: {\n    prototype: WebGLTransformFeedback;\n    new (): WebGLTransformFeedback;\n};\n\n/** Part of the WebGL API and represents the location of a uniform variable in a shader program. */\ninterface WebGLUniformLocation {}\n\ndeclare var WebGLUniformLocation: {\n    prototype: WebGLUniformLocation;\n    new (): WebGLUniformLocation;\n};\n\ninterface WebGLVertexArrayObject extends WebGLObject {}\n\ndeclare var WebGLVertexArrayObject: {\n    prototype: WebGLVertexArrayObject;\n    new (): WebGLVertexArrayObject;\n};\n\ninterface WebGLVertexArrayObjectOES extends WebGLObject {}\n\ninterface WebSocketEventMap {\n    close: CloseEvent;\n    error: Event;\n    message: MessageEvent;\n    open: Event;\n}\n\n/** Provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection. */\ninterface WebSocket extends EventTarget {\n    /**\n     * Returns a string that indicates how binary data from the WebSocket object is exposed to scripts:\n     *\n     * Can be set, to change how binary data is returned. The default is \"blob\".\n     */\n    binaryType: BinaryType;\n    /**\n     * Returns the number of bytes of application data (UTF-8 text and binary data) that have been queued using send() but not yet been transmitted to the network.\n     *\n     * If the WebSocket connection is closed, this attribute's value will only increase with each call to the send() method. (The number does not reset to zero once the connection closes.)\n     */\n    readonly bufferedAmount: number;\n    /**\n     * Returns the extensions selected by the server, if any.\n     */\n    readonly extensions: string;\n    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;\n    onerror: ((this: WebSocket, ev: Event) => any) | null;\n    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;\n    onopen: ((this: WebSocket, ev: Event) => any) | null;\n    /**\n     * Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor's second argument to perform subprotocol negotiation.\n     */\n    readonly protocol: string;\n    /**\n     * Returns the state of the WebSocket object's connection. It can have the values described below.\n     */\n    readonly readyState: number;\n    /**\n     * Returns the URL that was used to establish the WebSocket connection.\n     */\n    readonly url: string;\n    /**\n     * Closes the WebSocket connection, optionally using code as the the WebSocket connection close code and reason as the the WebSocket connection close reason.\n     */\n    close(code?: number, reason?: string): void;\n    /**\n     * Transmits data using the WebSocket connection. data can be a string, a Blob, an ArrayBuffer, or an ArrayBufferView.\n     */\n    send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void;\n    readonly CLOSED: number;\n    readonly CLOSING: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n    addEventListener<K extends keyof WebSocketEventMap>(\n        type: K,\n        listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof WebSocketEventMap>(\n        type: K,\n        listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var WebSocket: {\n    prototype: WebSocket;\n    new (url: string, protocols?: string | string[]): WebSocket;\n    readonly CLOSED: number;\n    readonly CLOSING: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n};\n\n/** This ServiceWorker API interface represents the scope of a service worker client that is a document in a browser context, controlled by an active worker. The service worker client independently selects and uses a service worker for its own loading and sub-resources. */\ninterface WindowClient extends Client {\n    readonly ancestorOrigins: ReadonlyArray<string>;\n    readonly focused: boolean;\n    readonly visibilityState: VisibilityState;\n    focus(): Promise<WindowClient>;\n    navigate(url: string): Promise<WindowClient | null>;\n}\n\ndeclare var WindowClient: {\n    prototype: WindowClient;\n    new (): WindowClient;\n};\n\ninterface WindowOrWorkerGlobalScope {\n    readonly caches: CacheStorage;\n    readonly crypto: Crypto;\n    readonly indexedDB: IDBFactory;\n    readonly isSecureContext: boolean;\n    readonly origin: string;\n    readonly performance: Performance;\n    atob(data: string): string;\n    btoa(data: string): string;\n    clearInterval(handle?: number): void;\n    clearTimeout(handle?: number): void;\n    createImageBitmap(\n        image: ImageBitmapSource,\n        options?: ImageBitmapOptions\n    ): Promise<ImageBitmap>;\n    createImageBitmap(\n        image: ImageBitmapSource,\n        sx: number,\n        sy: number,\n        sw: number,\n        sh: number,\n        options?: ImageBitmapOptions\n    ): Promise<ImageBitmap>;\n    fetch(input: RequestInfo, init?: RequestInit): Promise<Response>;\n    queueMicrotask(callback: VoidFunction): void;\n    setInterval(\n        handler: TimerHandler,\n        timeout?: number,\n        ...arguments: any[]\n    ): number;\n    setTimeout(\n        handler: TimerHandler,\n        timeout?: number,\n        ...arguments: any[]\n    ): number;\n}\n\ninterface WorkerEventMap extends AbstractWorkerEventMap {\n    message: MessageEvent;\n    messageerror: MessageEvent;\n}\n\n/** This Web Workers API interface represents a background task that can be easily created and can send messages back to its creator. Creating a worker is as simple as calling the Worker() constructor and specifying a script to be run in the worker thread. */\ninterface Worker extends EventTarget, AbstractWorker {\n    onmessage: ((this: Worker, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: Worker, ev: MessageEvent) => any) | null;\n    /**\n     * Clones message and transmits it to worker's global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned.\n     */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: PostMessageOptions): void;\n    /**\n     * Aborts worker's associated global environment.\n     */\n    terminate(): void;\n    addEventListener<K extends keyof WorkerEventMap>(\n        type: K,\n        listener: (this: Worker, ev: WorkerEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof WorkerEventMap>(\n        type: K,\n        listener: (this: Worker, ev: WorkerEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var Worker: {\n    prototype: Worker;\n    new (stringUrl: string | URL, options?: WorkerOptions): Worker;\n};\n\ninterface WorkerGlobalScopeEventMap {\n    error: ErrorEvent;\n    languagechange: Event;\n    offline: Event;\n    online: Event;\n    rejectionhandled: PromiseRejectionEvent;\n    unhandledrejection: PromiseRejectionEvent;\n}\n\n/** This Web Workers API interface is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by Window objects \u2014 in this case event handlers, the console or the associated WorkerNavigator object. Each WorkerGlobalScope has its own event loop. */\ninterface WorkerGlobalScope extends EventTarget, WindowOrWorkerGlobalScope {\n    /**\n     * Returns workerGlobal's WorkerLocation object.\n     */\n    readonly location: WorkerLocation;\n    readonly navigator: WorkerNavigator;\n    onerror: ((this: WorkerGlobalScope, ev: ErrorEvent) => any) | null;\n    onlanguagechange: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    onoffline: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    ononline: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    onrejectionhandled:\n        | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any)\n        | null;\n    onunhandledrejection:\n        | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any)\n        | null;\n    /**\n     * Returns workerGlobal.\n     */\n    readonly self: WorkerGlobalScope & typeof globalThis;\n    /**\n     * Fetches each URL in urls, executes them one-by-one in the order they are passed, and then returns (or throws if something went amiss).\n     */\n    importScripts(...urls: string[]): void;\n    addEventListener<K extends keyof WorkerGlobalScopeEventMap>(\n        type: K,\n        listener: (\n            this: WorkerGlobalScope,\n            ev: WorkerGlobalScopeEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof WorkerGlobalScopeEventMap>(\n        type: K,\n        listener: (\n            this: WorkerGlobalScope,\n            ev: WorkerGlobalScopeEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var WorkerGlobalScope: {\n    prototype: WorkerGlobalScope;\n    new (): WorkerGlobalScope;\n};\n\n/** The absolute location of the script executed by the Worker. Such an object is initialized for each worker and is available via the WorkerGlobalScope.location property obtained by calling self.location. */\ninterface WorkerLocation {\n    readonly hash: string;\n    readonly host: string;\n    readonly hostname: string;\n    readonly href: string;\n    toString(): string;\n    readonly origin: string;\n    readonly pathname: string;\n    readonly port: string;\n    readonly protocol: string;\n    readonly search: string;\n}\n\ndeclare var WorkerLocation: {\n    prototype: WorkerLocation;\n    new (): WorkerLocation;\n};\n\n/** A subset of the Navigator interface allowed to be accessed from a Worker. Such an object is initialized for each worker and is available via the WorkerGlobalScope.navigator property obtained by calling window.self.navigator. */\ninterface WorkerNavigator\n    extends NavigatorConcurrentHardware,\n        NavigatorID,\n        NavigatorLanguage,\n        NavigatorOnLine,\n        NavigatorStorage {\n    readonly permissions: Permissions;\n    readonly serviceWorker: ServiceWorkerContainer;\n}\n\ndeclare var WorkerNavigator: {\n    prototype: WorkerNavigator;\n    new (): WorkerNavigator;\n};\n\n/** This Streams API interface provides\xa0a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing. */\ninterface WritableStream<W = any> {\n    readonly locked: boolean;\n    abort(reason?: any): Promise<void>;\n    getWriter(): WritableStreamDefaultWriter<W>;\n}\n\ndeclare var WritableStream: {\n    prototype: WritableStream;\n    new <W = any>(\n        underlyingSink?: UnderlyingSink<W>,\n        strategy?: QueuingStrategy<W>\n    ): WritableStream<W>;\n};\n\n/** This Streams API interface represents a controller allowing control of a\xa0WritableStream's state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate. */\ninterface WritableStreamDefaultController {\n    error(error?: any): void;\n}\n\n/** This Streams API interface is the object returned by WritableStream.getWriter() and once created locks the < writer to the WritableStream ensuring that no other streams can write to the underlying sink. */\ninterface WritableStreamDefaultWriter<W = any> {\n    readonly closed: Promise<void>;\n    readonly desiredSize: number | null;\n    readonly ready: Promise<void>;\n    abort(reason?: any): Promise<void>;\n    close(): Promise<void>;\n    releaseLock(): void;\n    write(chunk: W): Promise<void>;\n}\n\ninterface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {\n    readystatechange: Event;\n}\n\n/** Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing. */\ninterface XMLHttpRequest extends XMLHttpRequestEventTarget {\n    onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;\n    /**\n     * Returns client's state.\n     */\n    readonly readyState: number;\n    /**\n     * Returns the response's body.\n     */\n    readonly response: any;\n    /**\n     * Returns the text response.\n     *\n     * Throws an \"InvalidStateError\" DOMException if responseType is not the empty string or \"text\".\n     */\n    readonly responseText: string;\n    /**\n     * Returns the response type.\n     *\n     * Can be set to change the response type. Values are: the empty string (default), \"arraybuffer\", \"blob\", \"document\", \"json\", and \"text\".\n     *\n     * When set: setting to \"document\" is ignored if current global object is not a Window object.\n     *\n     * When set: throws an \"InvalidStateError\" DOMException if state is loading or done.\n     *\n     * When set: throws an \"InvalidAccessError\" DOMException if the synchronous flag is set and current global object is a Window object.\n     */\n    responseType: XMLHttpRequestResponseType;\n    readonly responseURL: string;\n    readonly status: number;\n    readonly statusText: string;\n    /**\n     * Can be set to a time in milliseconds. When set to a non-zero value will cause fetching to terminate after the given time has passed. When the time has passed, the request has not yet completed, and the synchronous flag is unset, a timeout event will then be dispatched, or a \"TimeoutError\" DOMException will be thrown otherwise (for the send() method).\n     *\n     * When set: throws an \"InvalidAccessError\" DOMException if the synchronous flag is set and current global object is a Window object.\n     */\n    timeout: number;\n    /**\n     * Returns the associated XMLHttpRequestUpload object. It can be used to gather transmission information when data is transferred to a server.\n     */\n    readonly upload: XMLHttpRequestUpload;\n    /**\n     * True when credentials are to be included in a cross-origin request. False when they are to be excluded in a cross-origin request and when cookies are to be ignored in its response. Initially false.\n     *\n     * When set: throws an \"InvalidStateError\" DOMException if state is not unsent or opened, or if the send() flag is set.\n     */\n    withCredentials: boolean;\n    /**\n     * Cancels any network activity.\n     */\n    abort(): void;\n    getAllResponseHeaders(): string;\n    getResponseHeader(name: string): string | null;\n    /**\n     * Sets the request method, request URL, and synchronous flag.\n     *\n     * Throws a \"SyntaxError\" DOMException if either method is not a valid HTTP method or url cannot be parsed.\n     *\n     * Throws a \"SecurityError\" DOMException if method is a case-insensitive match for `CONNECT`, `TRACE`, or `TRACK`.\n     *\n     * Throws an \"InvalidAccessError\" DOMException if async is false, current global object is a Window object, and the timeout attribute is not zero or the responseType attribute is not the empty string.\n     */\n    open(method: string, url: string): void;\n    open(\n        method: string,\n        url: string,\n        async: boolean,\n        username?: string | null,\n        password?: string | null\n    ): void;\n    /**\n     * Acts as if the `Content-Type` header value for response is mime. (It does not actually change the header though.)\n     *\n     * Throws an \"InvalidStateError\" DOMException if state is loading or done.\n     */\n    overrideMimeType(mime: string): void;\n    /**\n     * Initiates the request. The body argument provides the request body, if any, and is ignored if the request method is GET or HEAD.\n     *\n     * Throws an \"InvalidStateError\" DOMException if either state is not opened or the send() flag is set.\n     */\n    send(body?: BodyInit | null): void;\n    /**\n     * Combines a header in author request headers.\n     *\n     * Throws an \"InvalidStateError\" DOMException if either state is not opened or the send() flag is set.\n     *\n     * Throws a \"SyntaxError\" DOMException if name is not a header name or if value is not a header value.\n     */\n    setRequestHeader(name: string, value: string): void;\n    readonly DONE: number;\n    readonly HEADERS_RECEIVED: number;\n    readonly LOADING: number;\n    readonly OPENED: number;\n    readonly UNSENT: number;\n    addEventListener<K extends keyof XMLHttpRequestEventMap>(\n        type: K,\n        listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventMap>(\n        type: K,\n        listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var XMLHttpRequest: {\n    prototype: XMLHttpRequest;\n    new (): XMLHttpRequest;\n    readonly DONE: number;\n    readonly HEADERS_RECEIVED: number;\n    readonly LOADING: number;\n    readonly OPENED: number;\n    readonly UNSENT: number;\n};\n\ninterface XMLHttpRequestEventTargetEventMap {\n    abort: ProgressEvent<XMLHttpRequestEventTarget>;\n    error: ProgressEvent<XMLHttpRequestEventTarget>;\n    load: ProgressEvent<XMLHttpRequestEventTarget>;\n    loadend: ProgressEvent<XMLHttpRequestEventTarget>;\n    loadstart: ProgressEvent<XMLHttpRequestEventTarget>;\n    progress: ProgressEvent<XMLHttpRequestEventTarget>;\n    timeout: ProgressEvent<XMLHttpRequestEventTarget>;\n}\n\ninterface XMLHttpRequestEventTarget extends EventTarget {\n    onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onload: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(\n        type: K,\n        listener: (\n            this: XMLHttpRequestEventTarget,\n            ev: XMLHttpRequestEventTargetEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(\n        type: K,\n        listener: (\n            this: XMLHttpRequestEventTarget,\n            ev: XMLHttpRequestEventTargetEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var XMLHttpRequestEventTarget: {\n    prototype: XMLHttpRequestEventTarget;\n    new (): XMLHttpRequestEventTarget;\n};\n\ninterface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(\n        type: K,\n        listener: (\n            this: XMLHttpRequestUpload,\n            ev: XMLHttpRequestEventTargetEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(\n        type: K,\n        listener: (\n            this: XMLHttpRequestUpload,\n            ev: XMLHttpRequestEventTargetEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var XMLHttpRequestUpload: {\n    prototype: XMLHttpRequestUpload;\n    new (): XMLHttpRequestUpload;\n};\n\ndeclare type EventListenerOrEventListenerObject =\n    | EventListener\n    | EventListenerObject;\n\ninterface Console {\n    log(message?: any, ...optionalParams: any[]): void;\n}\n\ndeclare var console: Console;\n\ndeclare namespace WebAssembly {\n    interface Global {\n        value: any;\n        valueOf(): any;\n    }\n\n    var Global: {\n        prototype: Global;\n        new (descriptor: GlobalDescriptor, v?: any): Global;\n    };\n\n    interface Instance {\n        readonly exports: Exports;\n    }\n\n    var Instance: {\n        prototype: Instance;\n        new (module: Module, importObject?: Imports): Instance;\n    };\n\n    interface Memory {\n        readonly buffer: ArrayBuffer;\n        grow(delta: number): number;\n    }\n\n    var Memory: {\n        prototype: Memory;\n        new (descriptor: MemoryDescriptor): Memory;\n    };\n\n    interface Module {}\n\n    var Module: {\n        prototype: Module;\n        new (bytes: BufferSource): Module;\n        customSections(\n            moduleObject: Module,\n            sectionName: string\n        ): ArrayBuffer[];\n        exports(moduleObject: Module): ModuleExportDescriptor[];\n        imports(moduleObject: Module): ModuleImportDescriptor[];\n    };\n\n    interface Table {\n        readonly length: number;\n        get(index: number): Function | null;\n        grow(delta: number): number;\n        set(index: number, value: Function | null): void;\n    }\n\n    var Table: {\n        prototype: Table;\n        new (descriptor: TableDescriptor): Table;\n    };\n\n    interface GlobalDescriptor {\n        mutable?: boolean;\n        value: ValueType;\n    }\n\n    interface MemoryDescriptor {\n        initial: number;\n        maximum?: number;\n    }\n\n    interface ModuleExportDescriptor {\n        kind: ImportExportKind;\n        name: string;\n    }\n\n    interface ModuleImportDescriptor {\n        kind: ImportExportKind;\n        module: string;\n        name: string;\n    }\n\n    interface TableDescriptor {\n        element: TableKind;\n        initial: number;\n        maximum?: number;\n    }\n\n    interface WebAssemblyInstantiatedSource {\n        instance: Instance;\n        module: Module;\n    }\n\n    type ImportExportKind = 'function' | 'global' | 'memory' | 'table';\n    type TableKind = 'anyfunc';\n    type ValueType = 'f32' | 'f64' | 'i32' | 'i64';\n    type ExportValue = Function | Global | Memory | Table;\n    type Exports = Record<string, ExportValue>;\n    type ImportValue = ExportValue | number;\n    type ModuleImports = Record<string, ImportValue>;\n    type Imports = Record<string, ModuleImports>;\n    function compile(bytes: BufferSource): Promise<Module>;\n    function compileStreaming(\n        source: Response | Promise<Response>\n    ): Promise<Module>;\n    function instantiate(\n        bytes: BufferSource,\n        importObject?: Imports\n    ): Promise<WebAssemblyInstantiatedSource>;\n    function instantiate(\n        moduleObject: Module,\n        importObject?: Imports\n    ): Promise<Instance>;\n    function instantiateStreaming(\n        response: Response | PromiseLike<Response>,\n        importObject?: Imports\n    ): Promise<WebAssemblyInstantiatedSource>;\n    function validate(bytes: BufferSource): boolean;\n}\n\ninterface FrameRequestCallback {\n    (time: number): void;\n}\n\ninterface OnErrorEventHandlerNonNull {\n    (\n        event: Event | string,\n        source?: string,\n        lineno?: number,\n        colno?: number,\n        error?: Error\n    ): any;\n}\n\ninterface PerformanceObserverCallback {\n    (\n        entries: PerformanceObserverEntryList,\n        observer: PerformanceObserver\n    ): void;\n}\n\ninterface QueuingStrategySizeCallback<T = any> {\n    (chunk: T): number;\n}\n\ninterface ReadableByteStreamControllerCallback {\n    (controller: ReadableByteStreamController): void | PromiseLike<void>;\n}\n\ninterface ReadableStreamDefaultControllerCallback<R> {\n    (controller: ReadableStreamDefaultController<R>): void | PromiseLike<void>;\n}\n\ninterface ReadableStreamErrorCallback {\n    (reason: any): void | PromiseLike<void>;\n}\n\ninterface TransformStreamDefaultControllerCallback<O> {\n    (controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;\n}\n\ninterface TransformStreamDefaultControllerTransformCallback<I, O> {\n    (\n        chunk: I,\n        controller: TransformStreamDefaultController<O>\n    ): void | PromiseLike<void>;\n}\n\ninterface VoidFunction {\n    (): void;\n}\n\ninterface WritableStreamDefaultControllerCloseCallback {\n    (): void | PromiseLike<void>;\n}\n\ninterface WritableStreamDefaultControllerStartCallback {\n    (controller: WritableStreamDefaultController): void | PromiseLike<void>;\n}\n\ninterface WritableStreamDefaultControllerWriteCallback<W> {\n    (\n        chunk: W,\n        controller: WritableStreamDefaultController\n    ): void | PromiseLike<void>;\n}\n\ninterface WritableStreamErrorCallback {\n    (reason: any): void | PromiseLike<void>;\n}\n\n/**\n * Returns dedicatedWorkerGlobal's name, i.e. the value given to the Worker constructor. Primarily useful for debugging.\n */\ndeclare var name: string;\ndeclare var onmessage:\n    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)\n    | null;\ndeclare var onmessageerror:\n    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)\n    | null;\n/**\n * Aborts dedicatedWorkerGlobal.\n */\ndeclare function close(): void;\n/**\n * Clones message and transmits it to the Worker object associated with dedicatedWorkerGlobal. transfer can be passed as a list of objects that are to be transferred rather than cloned.\n */\ndeclare function postMessage(message: any, transfer: Transferable[]): void;\ndeclare function postMessage(message: any, options?: PostMessageOptions): void;\n/**\n * Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n */\ndeclare function dispatchEvent(event: Event): boolean;\n/**\n * Returns workerGlobal's WorkerLocation object.\n */\ndeclare var location: WorkerLocation;\ndeclare var navigator: WorkerNavigator;\ndeclare var onerror:\n    | ((this: DedicatedWorkerGlobalScope, ev: ErrorEvent) => any)\n    | null;\ndeclare var onlanguagechange:\n    | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)\n    | null;\ndeclare var onoffline:\n    | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)\n    | null;\ndeclare var ononline:\n    | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)\n    | null;\ndeclare var onrejectionhandled:\n    | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any)\n    | null;\ndeclare var onunhandledrejection:\n    | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any)\n    | null;\n/**\n * Returns workerGlobal.\n */\ndeclare var self: WorkerGlobalScope & typeof globalThis;\n/**\n * Fetches each URL in urls, executes them one-by-one in the order they are passed, and then returns (or throws if something went amiss).\n */\ndeclare function importScripts(...urls: string[]): void;\n/**\n * Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n */\ndeclare function dispatchEvent(event: Event): boolean;\ndeclare var caches: CacheStorage;\ndeclare var crypto: Crypto;\ndeclare var indexedDB: IDBFactory;\ndeclare var isSecureContext: boolean;\ndeclare var origin: string;\ndeclare var performance: Performance;\ndeclare function atob(data: string): string;\ndeclare function btoa(data: string): string;\ndeclare function clearInterval(handle?: number): void;\ndeclare function clearTimeout(handle?: number): void;\ndeclare function createImageBitmap(\n    image: ImageBitmapSource,\n    options?: ImageBitmapOptions\n): Promise<ImageBitmap>;\ndeclare function createImageBitmap(\n    image: ImageBitmapSource,\n    sx: number,\n    sy: number,\n    sw: number,\n    sh: number,\n    options?: ImageBitmapOptions\n): Promise<ImageBitmap>;\ndeclare function fetch(\n    input: RequestInfo,\n    init?: RequestInit\n): Promise<Response>;\ndeclare function queueMicrotask(callback: VoidFunction): void;\ndeclare function setInterval(\n    handler: TimerHandler,\n    timeout?: number,\n    ...arguments: any[]\n): number;\ndeclare function setTimeout(\n    handler: TimerHandler,\n    timeout?: number,\n    ...arguments: any[]\n): number;\ndeclare function cancelAnimationFrame(handle: number): void;\ndeclare function requestAnimationFrame(callback: FrameRequestCallback): number;\ndeclare function addEventListener<\n    K extends keyof DedicatedWorkerGlobalScopeEventMap\n>(\n    type: K,\n    listener: (\n        this: DedicatedWorkerGlobalScope,\n        ev: DedicatedWorkerGlobalScopeEventMap[K]\n    ) => any,\n    options?: boolean | AddEventListenerOptions\n): void;\ndeclare function addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n): void;\ndeclare function removeEventListener<\n    K extends keyof DedicatedWorkerGlobalScopeEventMap\n>(\n    type: K,\n    listener: (\n        this: DedicatedWorkerGlobalScope,\n        ev: DedicatedWorkerGlobalScopeEventMap[K]\n    ) => any,\n    options?: boolean | EventListenerOptions\n): void;\ndeclare function removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n): void;\ntype HeadersInit = Headers | string[][] | Record<string, string>;\ntype BodyInit =\n    | Blob\n    | BufferSource\n    | FormData\n    | URLSearchParams\n    | ReadableStream<Uint8Array>\n    | string;\ntype RequestInfo = Request | string;\ntype BlobPart = BufferSource | Blob | string;\ntype DOMHighResTimeStamp = number;\ntype CanvasImageSource = ImageBitmap | OffscreenCanvas;\ntype OffscreenRenderingContext =\n    | OffscreenCanvasRenderingContext2D\n    | ImageBitmapRenderingContext\n    | WebGLRenderingContext\n    | WebGL2RenderingContext;\ntype MessageEventSource = MessagePort | ServiceWorker;\ntype ImageBitmapSource = CanvasImageSource | Blob | ImageData;\ntype OnErrorEventHandler = OnErrorEventHandlerNonNull | null;\ntype TimerHandler = string | Function;\ntype PerformanceEntryList = PerformanceEntry[];\ntype PushMessageDataInit = BufferSource | string;\ntype ReadableStreamReadResult<T> =\n    | ReadableStreamReadValueResult<T>\n    | ReadableStreamReadDoneResult<T>;\ntype VibratePattern = number | number[];\ntype AlgorithmIdentifier = string | Algorithm;\ntype HashAlgorithmIdentifier = AlgorithmIdentifier;\ntype BigInteger = Uint8Array;\ntype NamedCurve = string;\ntype GLenum = number;\ntype GLboolean = boolean;\ntype GLbitfield = number;\ntype GLint = number;\ntype GLsizei = number;\ntype GLintptr = number;\ntype GLsizeiptr = number;\ntype GLuint = number;\ntype GLfloat = number;\ntype GLclampf = number;\ntype TexImageSource = ImageBitmap | ImageData | OffscreenCanvas;\ntype Float32List = Float32Array | GLfloat[];\ntype Int32List = Int32Array | GLint[];\ntype GLint64 = number;\ntype GLuint64 = number;\ntype Uint32List = Uint32Array | GLuint[];\ntype BufferSource = ArrayBufferView | ArrayBuffer;\ntype DOMTimeStamp = number;\ntype FormDataEntryValue = File | string;\ntype IDBValidKey = number | string | Date | BufferSource | IDBArrayKey;\ntype Transferable = ArrayBuffer | MessagePort | ImageBitmap | OffscreenCanvas;\ntype BinaryType = 'arraybuffer' | 'blob';\ntype CanvasDirection = 'inherit' | 'ltr' | 'rtl';\ntype CanvasFillRule = 'evenodd' | 'nonzero';\ntype CanvasLineCap = 'butt' | 'round' | 'square';\ntype CanvasLineJoin = 'bevel' | 'miter' | 'round';\ntype CanvasTextAlign = 'center' | 'end' | 'left' | 'right' | 'start';\ntype CanvasTextBaseline =\n    | 'alphabetic'\n    | 'bottom'\n    | 'hanging'\n    | 'ideographic'\n    | 'middle'\n    | 'top';\ntype ClientTypes = 'all' | 'sharedworker' | 'window' | 'worker';\ntype ColorSpaceConversion = 'default' | 'none';\ntype EndingType = 'native' | 'transparent';\ntype FrameType = 'auxiliary' | 'nested' | 'none' | 'top-level';\ntype IDBCursorDirection = 'next' | 'nextunique' | 'prev' | 'prevunique';\ntype IDBRequestReadyState = 'done' | 'pending';\ntype IDBTransactionMode = 'readonly' | 'readwrite' | 'versionchange';\ntype ImageOrientation = 'flipY' | 'none';\ntype ImageSmoothingQuality = 'high' | 'low' | 'medium';\ntype KeyFormat = 'jwk' | 'pkcs8' | 'raw' | 'spki';\ntype KeyType = 'private' | 'public' | 'secret';\ntype KeyUsage =\n    | 'decrypt'\n    | 'deriveBits'\n    | 'deriveKey'\n    | 'encrypt'\n    | 'sign'\n    | 'unwrapKey'\n    | 'verify'\n    | 'wrapKey';\ntype NotificationDirection = 'auto' | 'ltr' | 'rtl';\ntype NotificationPermission = 'default' | 'denied' | 'granted';\ntype OffscreenRenderingContextId = '2d' | 'bitmaprenderer' | 'webgl' | 'webgl2';\ntype PermissionName =\n    | 'accelerometer'\n    | 'ambient-light-sensor'\n    | 'background-sync'\n    | 'bluetooth'\n    | 'camera'\n    | 'clipboard'\n    | 'device-info'\n    | 'geolocation'\n    | 'gyroscope'\n    | 'magnetometer'\n    | 'microphone'\n    | 'midi'\n    | 'notifications'\n    | 'persistent-storage'\n    | 'push'\n    | 'speaker';\ntype PermissionState = 'denied' | 'granted' | 'prompt';\ntype PremultiplyAlpha = 'default' | 'none' | 'premultiply';\ntype PushEncryptionKeyName = 'auth' | 'p256dh';\ntype PushPermissionState = 'denied' | 'granted' | 'prompt';\ntype ReferrerPolicy =\n    | ''\n    | 'no-referrer'\n    | 'no-referrer-when-downgrade'\n    | 'origin'\n    | 'origin-when-cross-origin'\n    | 'same-origin'\n    | 'strict-origin'\n    | 'strict-origin-when-cross-origin'\n    | 'unsafe-url';\ntype RequestCache =\n    | 'default'\n    | 'force-cache'\n    | 'no-cache'\n    | 'no-store'\n    | 'only-if-cached'\n    | 'reload';\ntype RequestCredentials = 'include' | 'omit' | 'same-origin';\ntype RequestDestination =\n    | ''\n    | 'audio'\n    | 'audioworklet'\n    | 'document'\n    | 'embed'\n    | 'font'\n    | 'image'\n    | 'manifest'\n    | 'object'\n    | 'paintworklet'\n    | 'report'\n    | 'script'\n    | 'sharedworker'\n    | 'style'\n    | 'track'\n    | 'video'\n    | 'worker'\n    | 'xslt';\ntype RequestMode = 'cors' | 'navigate' | 'no-cors' | 'same-origin';\ntype RequestRedirect = 'error' | 'follow' | 'manual';\ntype ResizeQuality = 'high' | 'low' | 'medium' | 'pixelated';\ntype ResponseType =\n    | 'basic'\n    | 'cors'\n    | 'default'\n    | 'error'\n    | 'opaque'\n    | 'opaqueredirect';\ntype ServiceWorkerState =\n    | 'activated'\n    | 'activating'\n    | 'installed'\n    | 'installing'\n    | 'parsed'\n    | 'redundant';\ntype ServiceWorkerUpdateViaCache = 'all' | 'imports' | 'none';\ntype VisibilityState = 'hidden' | 'visible';\ntype WebGLPowerPreference = 'default' | 'high-performance' | 'low-power';\ntype WorkerType = 'classic' | 'module';\ntype XMLHttpRequestResponseType =\n    | ''\n    | 'arraybuffer'\n    | 'blob'\n    | 'document'\n    | 'json'\n    | 'text';\n"},914:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.webworker=n.es2018intl=n.es2018regexp=n.es2018promise=n.es2018asyncgenerator=n.es2018asynciterable=n.es2017typedarrays=n.es2017intl=n.es2017string=n.es2017object=n.es2016arrayinclude=n.es2015symbolwellknown=n.es2015symbol=n.es2015reflect=n.es2015proxy=n.es2015promise=n.es2015generator=n.es2015iterable=n.es2015collection=n.es2015core=n.es5=n.types=void 0;var r=t(1188);Object.defineProperty(n,"types",{enumerable:!0,get:function(){return r.types}}),Object.defineProperty(n,"es5",{enumerable:!0,get:function(){return r.es5}}),Object.defineProperty(n,"es2015core",{enumerable:!0,get:function(){return r.es2015core}}),Object.defineProperty(n,"es2015collection",{enumerable:!0,get:function(){return r.es2015collection}}),Object.defineProperty(n,"es2015iterable",{enumerable:!0,get:function(){return r.es2015iterable}}),Object.defineProperty(n,"es2015generator",{enumerable:!0,get:function(){return r.es2015generator}}),Object.defineProperty(n,"es2015promise",{enumerable:!0,get:function(){return r.es2015promise}}),Object.defineProperty(n,"es2015proxy",{enumerable:!0,get:function(){return r.es2015proxy}}),Object.defineProperty(n,"es2015reflect",{enumerable:!0,get:function(){return r.es2015reflect}}),Object.defineProperty(n,"es2015symbol",{enumerable:!0,get:function(){return r.es2015symbol}}),Object.defineProperty(n,"es2015symbolwellknown",{enumerable:!0,get:function(){return r.es2015symbolwellknown}}),Object.defineProperty(n,"es2016arrayinclude",{enumerable:!0,get:function(){return r.es2016arrayinclude}}),Object.defineProperty(n,"es2017object",{enumerable:!0,get:function(){return r.es2017object}}),Object.defineProperty(n,"es2017string",{enumerable:!0,get:function(){return r.es2017string}}),Object.defineProperty(n,"es2017intl",{enumerable:!0,get:function(){return r.es2017intl}}),Object.defineProperty(n,"es2017typedarrays",{enumerable:!0,get:function(){return r.es2017typedarrays}}),Object.defineProperty(n,"es2018asynciterable",{enumerable:!0,get:function(){return r.es2018asynciterable}}),Object.defineProperty(n,"es2018asyncgenerator",{enumerable:!0,get:function(){return r.es2018asyncgenerator}}),Object.defineProperty(n,"es2018promise",{enumerable:!0,get:function(){return r.es2018promise}}),Object.defineProperty(n,"es2018regexp",{enumerable:!0,get:function(){return r.es2018regexp}}),Object.defineProperty(n,"es2018intl",{enumerable:!0,get:function(){return r.es2018intl}}),Object.defineProperty(n,"webworker",{enumerable:!0,get:function(){return r.webworker}})}}]);
//# sourceMappingURL=vendors~office.script.sync~office.script.synchronous.intellisense.types.477ee607.chunk.js.map                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       (this["webpackJsonpmaker-code-editor"]=this["webpackJsonpmaker-code-editor"]||[]).push([[24],{1056:function(e,t,i){"use strict";i.d(t,"a",(function(){return n}));var r=i(249);var o=Object(r.a)((function(e){return Object(r.a)((function(t){var i=Object(r.a)((function(e){return function(i){return t(i,e)}}));return function(r,o){return e(r,o?i(o):t)}}))}));function n(e,t){return o(e)(t)}},1325:function(e,t,i){"use strict";i.d(t,"a",(function(){return b}));var r=i(629),o=i(2),n=i(0),s=i(247),a=i(630),h=i(631),l=i(884),c=Object(a.a)(),d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return Object(o.c)(t,e),t.prototype.render=function(){var e=this.props,t=e.type,i=e.size,r=e.ariaLabel,a=e.ariaLive,d=e.styles,p=e.label,u=e.theme,g=e.className,m=e.labelPosition,_=r,f=Object(h.d)(this.props,h.c,["size"]),v=i;void 0===v&&void 0!==t&&(v=t===s.b.large?s.a.large:s.a.medium);var b=c(d,{theme:u,size:v,className:g,labelPosition:m});return n.createElement("div",Object(o.a)({},f,{className:b.root}),n.createElement("div",{className:b.circle}),p&&n.createElement("div",{className:b.label},p),_&&n.createElement("div",{role:"status","aria-live":a},n.createElement(l.a,null,n.createElement("div",{className:b.screenReaderText},_))))},t.defaultProps={size:s.a.medium,ariaLive:"polite",labelPosition:"bottom"},t}(n.Component),p=i(1350),u=i(632),g=i(950),m=i(1360),_=i(249),f={root:"ms-Spinner",circle:"ms-Spinner-circle",label:"ms-Spinner-label"},v=Object(_.b)((function(){return Object(p.a)({"0%":{transform:"rotate(0deg)"},"100%":{transform:"rotate(360deg)"}})})),b=Object(r.a)(d,(function(e){var t,i=e.theme,r=e.size,o=e.className,n=e.labelPosition,a=i.palette,h=Object(u.a)(f,i);return{root:[h.root,{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center"},"top"===n&&{flexDirection:"column-reverse"},"right"===n&&{flexDirection:"row"},"left"===n&&{flexDirection:"row-reverse"},o],circle:[h.circle,{boxSizing:"border-box",borderRadius:"50%",border:"1.5px solid "+a.themeLight,borderTopColor:a.themePrimary,animationName:v(),animationDuration:"1.3s",animationIterationCount:"infinite",animationTimingFunction:"cubic-bezier(.53,.21,.29,.67)",selectors:(t={},t[g.a]={borderTopColor:"Highlight"},t)},r===s.a.xSmall&&["ms-Spinner--xSmall",{width:12,height:12}],r===s.a.small&&["ms-Spinner--small",{width:16,height:16}],r===s.a.medium&&["ms-Spinner--medium",{width:20,height:20}],r===s.a.large&&["ms-Spinner--large",{width:28,height:28}]],label:[h.label,i.fonts.small,{color:a.themePrimary,margin:"8px 0 0",textAlign:"center"},"top"===n&&{margin:"0 0 8px"},"right"===n&&{margin:"0 0 0 8px"},"left"===n&&{margin:"0 8px 0 0"}],screenReaderText:m.a}}),void 0,{scope:"Spinner"})},1327:function(e,t,i){"use strict";i.d(t,"a",(function(){return S}));var r=i(2),o=i(0),n=i(1344),s=i(955),a=i(948),h=i(1351),l=i(631),c=i(1348),d=i(844),p=i(1346),u=i(47),g=0,m=1,_=2,f=3,v=i(1056),b={top:-1,bottom:-1,left:-1,right:-1,width:0,height:0},y=function(e){return e.getBoundingClientRect()},P=y,R=y,S=function(e){function t(t){var i=e.call(this,t)||this;return i._root=o.createRef(),i._surface=o.createRef(),i._onRenderRoot=function(e){var t=e.rootRef,i=e.surfaceElement,n=e.divProps;return o.createElement("div",Object(r.a)({ref:t},n),i)},i._onRenderSurface=function(e){var t=e.surfaceRef,i=e.pageElements,n=e.divProps;return o.createElement("div",Object(r.a)({ref:t},n),i)},i._onRenderPage=function(e,t){for(var n=i.props,s=n.onRenderCell,a=n.role,h=e.page,l=h.items,c=void 0===l?[]:l,d=h.startIndex,p=Object(r.d)(e,["page"]),u=void 0===a?"listitem":"presentation",g=[],m=0;m<c.length;m++){var _=d+m,f=c[m],v=i.props.getKey?i.props.getKey(f,_):f&&f.key;null!==v&&void 0!==v||(v=_),g.push(o.createElement("div",{role:u,className:"ms-List-cell",key:v,"data-list-index":_,"data-automationid":"ListCell"},s&&s(f,_,i.props.ignoreScrollingState?void 0:i.state.isScrolling)))}return o.createElement("div",Object(r.a)({},p),g)},Object(n.a)(i),i.state={pages:[],isScrolling:!1},i._async=new s.a(i),i._events=new a.a(i),i._estimatedPageHeight=0,i._totalEstimates=0,i._requiredWindowsAhead=0,i._requiredWindowsBehind=0,i._measureVersion=0,i._onAsyncScroll=i._async.debounce(i._onAsyncScroll,100,{leading:!1,maxWait:500}),i._onAsyncIdle=i._async.debounce(i._onAsyncIdle,200,{leading:!1}),i._onAsyncResize=i._async.debounce(i._onAsyncResize,16,{leading:!1}),i._onScrollingDone=i._async.debounce(i._onScrollingDone,500,{leading:!1}),i._cachedPageHeights={},i._estimatedPageHeight=0,i._focusedIndex=-1,i._pageCache={},i}return Object(r.c)(t,e),t.prototype.scrollToIndex=function(e,t,i){void 0===i&&(i=g);for(var r=this.props.startIndex,o=r+this._getRenderCount(),n=this._allowedRect,s=0,a=1,h=r;h<o;h+=a){var l=this._getPageSpecification(h,n),c=l.height;if(a=l.itemCount,h<=e&&h+a>e){if(t&&this._scrollElement){for(var d=R(this._scrollElement),p={top:this._scrollElement.scrollTop,bottom:this._scrollElement.scrollTop+d.height},u=e-h,v=0;v<u;++v)s+=t(h+v);var b=s+t(e);switch(i){case m:return void(this._scrollElement.scrollTop=s);case _:return void(this._scrollElement.scrollTop=b-d.height);case f:return void(this._scrollElement.scrollTop=(s+b-d.height)/2)}if(s>=p.top&&b<=p.bottom)return;s<p.top||b>p.bottom&&(s=b-d.height)}return void(this._scrollElement.scrollTop=s)}s+=c}},t.prototype.getStartItemIndexInView=function(e){for(var t=0,i=this.state.pages||[];t<i.length;t++){var r=i[t];if(!r.isSpacer&&(this._scrollTop||0)>=r.top&&(this._scrollTop||0)<=r.top+r.height){if(!e){var o=Math.floor(r.height/r.itemCount);return r.startIndex+Math.floor((this._scrollTop-r.top)/o)}for(var n=0,s=r.startIndex;s<r.startIndex+r.itemCount;s++){o=e(s);if(r.top+n<=this._scrollTop&&this._scrollTop<r.top+n+o)return s;n+=o}}}return 0},t.prototype.componentDidMount=function(){this._updatePages(),this._measureVersion++,this._scrollElement=Object(h.e)(this._root.current),this._events.on(window,"resize",this._onAsyncResize),this._root.current&&this._events.on(this._root.current,"focus",this._onFocus,!0),this._scrollElement&&(this._events.on(this._scrollElement,"scroll",this._onScroll),this._events.on(this._scrollElement,"scroll",this._onAsyncScroll))},t.prototype.componentWillUnmount=function(){this._async.dispose(),this._events.dispose(),delete this._scrollElement},t.prototype.UNSAFE_componentWillReceiveProps=function(e){e.items===this.props.items&&e.renderCount===this.props.renderCount&&e.startIndex===this.props.startIndex&&e.version===this.props.version||(this._resetRequiredWindows(),this._requiredRect=null,this._measureVersion++,this._invalidatePageCache(),this._updatePages(e))},t.prototype.shouldComponentUpdate=function(e,t){var i=this.state.pages,r=t.pages,o=!1;if(!t.isScrolling&&this.state.isScrolling)return!0;if(e.version!==this.props.version)return!0;if(e.items===this.props.items&&i.length===r.length)for(var n=0;n<i.length;n++){var s=i[n],a=r[n];if(s.key!==a.key||s.itemCount!==a.itemCount){o=!0;break}}else o=!0;return o},t.prototype.forceUpdate=function(){this._invalidatePageCache(),this._updateRenderRects(this.props,!0),this._updatePages(),this._measureVersion++,e.prototype.forceUpdate.call(this)},t.prototype.getTotalListHeight=function(){return this._surfaceRect.height},t.prototype.render=function(){for(var e=this.props,t=e.className,i=e.role,o=void 0===i?"list":i,n=e.onRenderSurface,s=e.onRenderRoot,a=this.state.pages,h=void 0===a?[]:a,d=[],p=Object(l.d)(this.props,l.c),u=0,g=h;u<g.length;u++){var m=g[u];d.push(this._renderPage(m))}var _=n?Object(v.a)(n,this._onRenderSurface):this._onRenderSurface;return(s?Object(v.a)(s,this._onRenderRoot):this._onRenderRoot)({rootRef:this._root,pages:h,surfaceElement:_({surfaceRef:this._surface,pages:h,pageElements:d,divProps:{role:"presentation",className:"ms-List-surface"}}),divProps:Object(r.a)(Object(r.a)({},p),{className:Object(c.a)("ms-List",t),role:d.length>0?o:void 0})})},t.prototype._shouldVirtualize=function(e){void 0===e&&(e=this.props);var t=e.onShouldVirtualize;return!t||t(e)},t.prototype._invalidatePageCache=function(){this._pageCache={}},t.prototype._renderPage=function(e){var t,i=this.props.usePageCache;if(i&&(t=this._pageCache[e.key])&&t.pageElement)return t.pageElement;var r=this._getPageStyle(e),o=this.props.onRenderPage,n=(void 0===o?this._onRenderPage:o)({page:e,className:"ms-List-page",key:e.key,ref:e.key,style:r,role:"presentation"},this._onRenderPage);return i&&0===e.startIndex&&(this._pageCache[e.key]={page:e,pageElement:n}),n},t.prototype._getPageStyle=function(e){var t=this.props.getPageStyle;return Object(r.a)(Object(r.a)({},t?t(e):{}),e.items?{}:{height:e.height})},t.prototype._onFocus=function(e){for(var t=e.target;t!==this._surface.current;){var i=t.getAttribute("data-list-index");if(i){this._focusedIndex=Number(i);break}t=Object(d.a)(t)}},t.prototype._onScroll=function(){this.state.isScrolling||this.props.ignoreScrollingState||this.setState({isScrolling:!0}),this._resetRequiredWindows(),this._onScrollingDone()},t.prototype._resetRequiredWindows=f